%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: extreme.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips -f extreme
%DVIPSParameters: dpi=300, comments removed
%DVIPSSource:  TeX output 1998.11.01:1638
%%BeginProcSet: tex.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]{ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}
if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300 (extreme.dvi)
@start /Fa 1 50 df<008003800F80F380038003800380038003800380038003800380
038003800380038003800380038003800380038003800380038003800380038003800380
07C0FFFE0F217CA018>49 D E /Fb 22 128 df<00000018000000003800000000380000
00007800000000F800000000F800000001F800000001F8000000037C000000033C000000
063C000000063C0000000C3C0000001C3C000000183C000000303C000000303C00000060
3C000000603C000000C03C000000C03C000001803C000003803C000003003C000006003C
000006003C00000FFFFC00000FFFFE000018001E000018001E000030001E000030001E00
0060001E0000C0001E0000C0001E000180001E000180001E000300001E000700001E001F
80003E00FFF003FFF0FFE003FFE0242A7DA92B>65 D<003FFF80007FFF000003E0000003
C0000003C0000003C0000003C00000078000000780000007800000078000000F0000000F
0000000F0000000F0000001E0000001E0000001E0000001E0000003C0000003C0000003C
0000003C00000078000000780000007800000078000000F0000000F0000000F0000000F0
000001E0000001E0000001E0000001E0000003C0000003C0000003C0000007C00000FFFE
0000FFFE000019297CA817>73 D<003FFFFF00003FFFFFC00003E003E00003C001F00003
C000F80003C000780003C0007C000780007C000780007C000780007C000780007C000F00
00F8000F0000F8000F0000F8000F0001F0001E0001E0001E0003C0001E000780001E000F
00003C007C00003FFFF000003C000000003C000000007800000000780000000078000000
007800000000F000000000F000000000F000000000F000000001E000000001E000000001
E000000001E000000003C000000003C000000003C000000007C0000000FFFE000000FFFC
00000026297CA828>80 D<00007F010001FFC3000381E3000E0077001C003E0018001E00
38001E0070001E0060001C00E0001C00E0001C00E0001C01E0001801E0001801E0000001
E0000000F0000000FC0000007F8000007FF800003FFE00000FFF000001FF8000001F8000
0007C0000003C0000003C0000001C0000001C0180001C0180001C0180001C03800038038
0003803800030038000700780006007C000C007C001C0066003800E780E000C1FFC00080
7F0000202B7CA921>83 D<0FFFFFFFF00FFFFFFFF01F803C03F01E007800F01C00780060
380078006038007800603000F000603000F000606000F000606000F000C06001E000C0C0
01E000C0C001E000C00001E000000003C000000003C000000003C000000003C000000007
800000000780000000078000000007800000000F000000000F000000000F000000000F00
0000001E000000001E000000001E000000001E000000003C000000003C000000003C0000
00003C00000000780000000078000000007800000000F80000007FFFF000007FFFF00000
242976A82A>I<003E0000E1180180BC0300FC0700780E00781C00781C00783C00F07800
F07800F07800F0F001E0F001E0F001E0F001E0E003C0E003C3E003C3E003C3E00786600F
86701B8630338C1861880F80F0181A7A991E>97 D<001F8000706001C030038030070070
0E00F01E00F01C00603C0000380000780000780000F00000F00000F00000F00000F00000
E00000E00000E00020F000607000C03001803807000C1C0007F000141A7A991B>99
D<000003C000007FC000007FC0000007C00000078000000780000007800000078000000F
0000000F0000000F0000000F0000001E0000001E0000001E0000001E00003E3C0000E13C
000180BC000300FC00070078000E0078001C0078001C0078003C00F0007800F0007800F0
007800F000F001E000F001E000F001E000F001E000E003C000E003C300E003C300E003C3
00E0078600600F8600701B860030338C00186188000F80F0001A2A7AA91E>I<001F8000
704001C0200380300700300E00301C00303C00603C00607801C0780F007FF800F00000F0
0000F00000F00000F00000F00000F00000F000207000607000C03001801807000C1C0007
F000141A7A991B>I<000007800000186000003860000070F0000071E00000F0C00000F0
000000F0000001E0000001E0000001E0000001E0000001E0000003C0000003C0000003C0
00007FFF0000FFFF000007800000078000000780000007800000078000000F0000000F00
00000F0000000F0000000F0000001E0000001E0000001E0000001E0000001E0000003C00
00003C0000003C0000003C0000003C00000078000000780000007800000078000000F800
0000F0000000F0000000F0000000E0000001E0000061E00000F1C00000F1800000E38000
00630000003C0000001C3682A912>I<003C000007FC000007FC0000007C000000780000
00780000007800000078000000F0000000F0000000F0000000F0000001E0000001E00000
01E0000001E0000003C3F00003CE1C0003D80E0003F00E0007E00F0007C00F0007800F00
07800F000F001E000F001E000F001E000F001E001E003C001E003C001E003C001E007800
3C0078003C0078603C00F0603C00F0607800F0C07800E0C07800E1807800E100F0006200
60003C001B2A7DA91E>104 D<001C003C003C0018000000000000000000000000000000
000000000007800CE0186030F030F060F060F061E0C1E001E003C003C00780078007800F
000F000F0C1E0C1E0C1E181C181C301C200C4007800E287CA712>I<0F00FC01F8001983
87070E0031C6038C070031EC0398070061F803F0078061F003E0078061E003C0078061E0
03C00780C3C007800F0003C007800F0003C007800F0003C007800F0007800F001E000780
0F001E0007800F001E0007800F003C000F001E003C000F001E003C300F001E0078300F00
1E0078301E003C0078601E003C0070601E003C0070C01E003C0070803C00780031001800
30001E002C1A7C9930>109 D<0F00FC001983870031C6038031EC038061F803C061F003
C061E003C061E003C0C3C0078003C0078003C0078003C0078007800F0007800F0007800F
0007801E000F001E000F001E180F003C180F003C181E003C301E0038301E0038601E0038
403C00188018000F001D1A7C9921>I<001F8000706001C03003803807001C0E001C1E00
1C1C001E3C001E38001E78001E78001EF0003CF0003CF0003CF00038F00078E00070E000
F0E000E0F001C0700380300300380E000C180007E000171A7A991E>I<0F01F819860E31
CC0631F80F61F01E61F00C61E00061E000C3C00003C00003C00003C00007800007800007
80000780000F00000F00000F00000F00001E00001E00001E00001E00003C000018000018
1A7C9919>114 D<001F8000706000E03001C0300180700380F00380F003806003C00003
E00003FE0003FF8001FFC0007FC0000FE00001E00001E00000E07800E07800E0F001C060
0180600380200700181C0007F000141A7D9918>I<00300078007800F000F000F000F001
E001E001E001E0FFFEFFFE03C003C007800780078007800F000F000F000F001E001E001E
001E003C003C0C3C0C3C18781878103830382018C00F800F257BA413>I<078003000CE0
07801860078030F0078030F00F0060F00F0060F00F0061E00F00C1E01E0001E01E0003C0
1E0003C01E0003C03C0007803C0007803C0007803C000F0078000F0078600F0078600F00
78600F00F0C00F00F0C00701F0C0070171800386310000F81E001B1A7C991F>I<07800C
0CE01E18601F30F00F30F00F60F00760F00761E007C1E00601E00603C00603C00603C00C
07800C07800C0780080F00180F00180F00300F00300F00600F00400700C003818001C300
00FC00181A7C991B>I<078003000CE007801860078030F0078030F00F0060F00F0060F0
0F0061E00F00C1E01E0001E01E0003C01E0003C01E0003C03C0007803C0007803C000780
3C000F0078000F0078000F0078000F0078000F00F0000F00F0000701F0000701F0000387
E00000F9E0000001E0000001E0000003C0000003C000180780003C070000780F0000700E
0000601C00003038000010E000000F80000019267C991C>121 D<381C7C3EFC7EFC7EF8
7C70380F0670A81E>127 D E /Fc 19 121 df<000003FF80018000003FFFF003800001
FFFFFC07800007FF003F0F80001FF800079F80003FC00001FF8000FF800000FF8001FE00
00007F8003FC0000003F8007FC0000001F8007F80000000F800FF00000000F801FF00000
0007801FF000000007803FE000000007803FE000000003807FE000000003807FE0000000
03807FC000000000007FC00000000000FFC00000000000FFC00000000000FFC000000000
00FFC00000000000FFC00000000000FFC00000000000FFC00000000000FFC00000000000
FFC000000000007FC000000000007FC000000000007FE000000000007FE000000003803F
E000000003803FE000000003801FF000000003801FF000000007800FF0000000070007F8
000000070007FC0000000E0003FC0000001E0001FE0000001C0000FF8000007800003FC0
0000F000001FF80003E0000007FF003F80000001FFFFFE000000003FFFF80000000003FF
80000031317CB03A>67 D<FFFFFFFFF00000FFFFFFFFFF0000FFFFFFFFFFC00000FF8000
FFF00000FF80000FF80000FF800003FE0000FF800001FF0000FF800000FF8000FF800000
7FC000FF8000003FC000FF8000001FE000FF8000001FF000FF8000000FF000FF8000000F
F800FF8000000FF800FF80000007FC00FF80000007FC00FF80000007FC00FF80000007FC
00FF80000007FE00FF80000007FE00FF80000007FE00FF80000007FE00FF80000007FE00
FF80000007FE00FF80000007FE00FF80000007FE00FF80000007FE00FF80000007FE00FF
80000007FE00FF80000007FC00FF80000007FC00FF80000007FC00FF80000007FC00FF80
00000FF800FF8000000FF800FF8000000FF000FF8000001FF000FF8000001FE000FF8000
003FE000FF8000007FC000FF8000007F8000FF800001FF0000FF800003FE0000FF80000F
FC0000FF80007FF000FFFFFFFFFFC000FFFFFFFFFF0000FFFFFFFFF0000037317EB03E>
I<FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF000FF80003FF000FF800007F800FF800003
F800FF800000F800FF800000F800FF8000007800FF8000007800FF8000003800FF800000
3800FF8000003800FF8000001C00FF8007001C00FF8007001C00FF8007001C00FF800700
0000FF8007000000FF800F000000FF801F000000FF803F000000FFFFFF000000FFFFFF00
0000FFFFFF000000FF803F000000FF801F000000FF800F000000FF8007000000FF800700
0000FF8007000700FF8007000700FF8007000700FF8000000E00FF8000000E00FF800000
0E00FF8000000E00FF8000001E00FF8000001E00FF8000003C00FF8000003C00FF800000
7C00FF800000FC00FF800001FC00FF800007FC00FF80003FFCFFFFFFFFFFF8FFFFFFFFFF
F8FFFFFFFFFFF830317EB035>I<FFFFFF80FFFFFF80FFFFFF8000FF800000FF800000FF
800000FF800000FF800000FF800000FF800000FF800000FF800000FF800000FF800000FF
800000FF800000FF800000FF800000FF800000FF800000FF800000FF800000FF800000FF
800000FF800000FF800000FF800000FF800000FF800000FF800000FF800000FF800000FF
800000FF800000FF800000FF800000FF800000FF800000FF800000FF800000FF800000FF
800000FF800000FF800000FF800000FF8000FFFFFF80FFFFFF80FFFFFF8019317EB01E>
73 D<FFFFC000000003FFFFFFFFC000000003FFFFFFFFE000000007FFFF00FFE0000000
07FF0000EFF00000000EFF0000EFF00000000EFF0000EFF00000000EFF0000E7F8000000
1CFF0000E7F80000001CFF0000E3FC00000038FF0000E3FC00000038FF0000E1FE000000
70FF0000E1FE00000070FF0000E0FF000000E0FF0000E0FF000000E0FF0000E07F800001
C0FF0000E07F800001C0FF0000E03FC0000380FF0000E03FC0000380FF0000E03FC00003
80FF0000E01FE0000700FF0000E01FE0000700FF0000E00FF0000E00FF0000E00FF0000E
00FF0000E007F8001C00FF0000E007F8001C00FF0000E003FC003800FF0000E003FC0038
00FF0000E001FE007000FF0000E001FE007000FF0000E000FF00E000FF0000E000FF00E0
00FF0000E000FF00E000FF0000E0007F81C000FF0000E0007F81C000FF0000E0003FC380
00FF0000E0003FC38000FF0000E0001FE70000FF0000E0001FE70000FF0000E0000FFE00
00FF0000E0000FFE0000FF0000E00007FC0000FF0000E00007FC0000FF0000E00007FC00
00FF0000E00003F80000FF0001F00003F80000FF00FFFFE001F000FFFFFFFFFFE001F000
FFFFFFFFFFE000E000FFFFFF48317EB04D>77 D<00000FFF0000000000FFFFF000000007
FC03FE0000001FE0007F8000003FC0003FC000007F00000FE00001FE000007F80003FC00
0003FC0007FC000003FE0007F8000001FE000FF8000001FF001FF0000000FF801FF00000
00FF803FE00000007FC03FE00000007FC03FE00000007FC07FE00000007FE07FC0000000
3FE07FC00000003FE0FFC00000003FF0FFC00000003FF0FFC00000003FF0FFC00000003F
F0FFC00000003FF0FFC00000003FF0FFC00000003FF0FFC00000003FF0FFC00000003FF0
FFC00000003FF0FFC00000003FF07FC00000003FE07FC00000003FE07FE00000007FE07F
E00000007FE03FE00000007FC03FE00000007FC01FF0000000FF801FF0000000FF800FF0
01F800FF0007F807FC01FE0007FC0E0603FE0003FC0C0303FC0001FE180187F80000FF18
01CFF000003FD800FFC000001FEC00FF80000007FE03FE00000000FFFFF0000000000FFF
78003000000000780030000000007C0030000000003E0070000000003F81F0000000003F
FFF0000000003FFFE0000000001FFFE0000000001FFFE0000000001FFFC0000000000FFF
C0000000000FFF800000000007FF000000000003FE000000000000F800343F7CB03D>81
D<00FFF0000003FFFF00000F803F80000FC00FE0001FE007F0001FE007F0001FE003F800
0FC003FC00078003FC00000003FC00000003FC00000003FC00000003FC000000FFFC0000
1FFFFC0000FFE3FC0003FC03FC000FF003FC001FC003FC003FC003FC007F8003FC007F80
03FC00FF0003FC00FF0003FC00FF0003FC00FF0007FC00FF0007FC007F800DFC003FC01D
FE001FE078FFF007FFE07FF000FF803FF024207E9F27>97 D<0000000FC0000007FFC000
0007FFC0000007FFC00000007FC00000003FC00000003FC00000003FC00000003FC00000
003FC00000003FC00000003FC00000003FC00000003FC00000003FC00000003FC0000000
3FC00000003FC00007F83FC0003FFF3FC000FE07BFC003F801FFC007E0007FC00FE0007F
C01FC0003FC03FC0003FC03FC0003FC07F80003FC07F80003FC07F80003FC0FF80003FC0
FF80003FC0FF80003FC0FF80003FC0FF80003FC0FF80003FC0FF80003FC0FF80003FC07F
80003FC07F80003FC07F80003FC03FC0003FC03FC0003FC01FC0003FC00FE0007FC007E0
00FFC003F003FFE001FC0F3FFE007FFE3FFE000FF03FFE27327DB12D>100
D<000FFC00007FFF8001FC0FC003F003E007E001F00FE001F81FC000FC3FC000FE3FC000
FE7F80007E7F80007F7F80007FFF80007FFF80007FFFFFFFFFFFFFFFFFFF800000FF8000
00FF800000FF8000007F8000007F8000007F8000003FC000071FC000071FC0000E0FE000
0E07F0001C03F8007800FE03E0003FFFC00007FE0020207E9F25>I<01F8000000FFF800
0000FFF8000000FFF80000000FF800000007F800000007F800000007F800000007F80000
0007F800000007F800000007F800000007F800000007F800000007F800000007F8000000
07F800000007F800000007F807F80007F83FFE0007F8783F0007F8C03F8007F9801FC007
FB001FC007FE001FE007FC001FE007FC001FE007FC001FE007F8001FE007F8001FE007F8
001FE007F8001FE007F8001FE007F8001FE007F8001FE007F8001FE007F8001FE007F800
1FE007F8001FE007F8001FE007F8001FE007F8001FE007F8001FE007F8001FE007F8001F
E007F8001FE007F8001FE0FFFFC3FFFFFFFFC3FFFFFFFFC3FFFF28327DB12D>104
D<03C00007E0000FF0001FF8001FF8001FF8001FF8000FF00007E00003C0000000000000
0000000000000000000000000000000000000000000001F8007FF8007FF8007FF80007F8
0007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F8
0007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F8
00FFFF80FFFF80FFFF8011337DB217>I<01F800FFF800FFF800FFF8000FF80007F80007
F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007
F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007
F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007
F80007F80007F80007F80007F800FFFFC0FFFFC0FFFFC012327DB117>108
D<03F007F8001FE000FFF03FFE00FFF800FFF0783F01E0FC00FFF0C03F8300FE000FF180
1FC6007F0007F3001FCC007F0007F6001FF8007F8007FC001FF0007F8007FC001FF0007F
8007FC001FF0007F8007F8001FE0007F8007F8001FE0007F8007F8001FE0007F8007F800
1FE0007F8007F8001FE0007F8007F8001FE0007F8007F8001FE0007F8007F8001FE0007F
8007F8001FE0007F8007F8001FE0007F8007F8001FE0007F8007F8001FE0007F8007F800
1FE0007F8007F8001FE0007F8007F8001FE0007F8007F8001FE0007F8007F8001FE0007F
8007F8001FE0007F8007F8001FE0007F80FFFFC3FFFF0FFFFCFFFFC3FFFF0FFFFCFFFFC3
FFFF0FFFFC3E207D9F43>I<03F007F800FFF03FFE00FFF0783F00FFF0C03F800FF1801F
C007F3001FC007F6001FE007FC001FE007FC001FE007FC001FE007F8001FE007F8001FE0
07F8001FE007F8001FE007F8001FE007F8001FE007F8001FE007F8001FE007F8001FE007
F8001FE007F8001FE007F8001FE007F8001FE007F8001FE007F8001FE007F8001FE007F8
001FE007F8001FE007F8001FE0FFFFC3FFFFFFFFC3FFFFFFFFC3FFFF28207D9F2D>I<00
07FC0000007FFFC00001FC07F00003F001F80007E000FC000FC0007E001FC0007F003FC0
007F803F80003F807F80003FC07F80003FC07F80003FC0FF80003FE0FF80003FE0FF8000
3FE0FF80003FE0FF80003FE0FF80003FE0FF80003FE0FF80003FE07F80003FC07F80003F
C07F80003FC03FC0007F803FC0007F801FC0007F000FE000FE0007E000FC0003F803F800
01FE0FF000007FFFC0000007FC000023207E9F28>I<03F03F00FFF07FC0FFF1C3E0FFF1
87E00FF30FF007F60FF007F60FF007FC07E007FC03C007FC000007FC000007F8000007F8
000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8
000007F8000007F8000007F8000007F8000007F8000007F8000007F80000FFFFE000FFFF
E000FFFFE0001C207E9F21>114 D<01FF860007FFFE001F00FE003C003E0078001E0078
000E00F8000E00F8000E00F8000E00FC000000FF800000FFFC00007FFFC0003FFFF0003F
FFF8001FFFFC0007FFFE0001FFFF00003FFF000000FF8000003F8060001F80E0000F80E0
000F80F0000F80F0000F00F8000F00FC001E00FE001C00FF807800F3FFF000C07F800019
207D9F20>I<001C0000001C0000001C0000001C0000001C0000003C0000003C0000003C
0000007C0000007C000000FC000001FC000003FC000007FC00001FFFFE00FFFFFE00FFFF
FE0003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC
000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC038003FC
038003FC038003FC038003FC038003FC038003FC038001FC038001FC070000FE0700007F
0E00003FFC000007F000192E7FAD1F>I<7FFF807FFC7FFF807FFC7FFF807FFC03FC000F
0001FE001E0000FF003C0000FF803800007FC07800003FC0F000001FE1E000000FF3C000
000FFF80000007FF00000003FE00000001FE00000000FF00000000FF80000000FFC00000
01FFC0000003DFE00000078FF00000078FF800000F07FC00001E03FE00003C01FE000078
00FF0000F000FF8001E0007FC003E0003FE0FFFC01FFFFFFFC01FFFFFFFC01FFFF28207F
9F2B>120 D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 313 54 a Fc(Extreme)26 b(QCD)h(in)f(the)h(Instan)n(ton)h(Mo)r
(del)784 209 y Fb(Thomas)20 b(Sch\177)-30 b(afer)626
305 y(Institute)22 b(for)f(A)m(dvanc)m(e)m(d)f(Study)867
400 y(Princ)m(eton)400 1330 y @beginspecial 125 @llx
343 @lly 460 @urx 575 @ury 2834 @rwi @setspecial
%%BeginDocument: rhic.ps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-69.0 715.5 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /endash 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n -1000 12487 m -1000 -1000 l 18812 -1000 l 18812 12487 l cp clip
 0.04200 0.04200 sc
15.000 slw
% Ellipse
n 13289 8032 2850 1650 0 360 DrawEllipse gs /PC [[0.00 1.00 1.00] [0.00 1.00 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 695.93 425.47] PATmp PATsp ef gr PATusp gs col3 s gr

7.500 slw
% Ellipse
n 5700 8025 5550 2925 0 360 DrawEllipse gs col2 1.00 shd ef gr gs col7 s gr

% Polyline
n 4800 4950 m 5700 4950 l 5700 5400 l 4800 5400 l cp gs col7 1.00 shd ef gr gs col7 s gr 
% Polyline
15.000 slw
n 12375 6150 m 16200 6150 l 16200 8550 l 12375 8550 l cp gs col7 1.00 shd ef gr gs col7 s gr 
7.500 slw
% Ellipse
n 5700 8025 4575 2775 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col7 s gr

% Ellipse
n 6900 8025 375 375 0 360 DrawEllipse gs col1 0.15 tnt ef gr gs col-1 s gr

15.000 slw
% Ellipse
n 8700 8025 1200 150 0 360 DrawEllipse gs col26 1.00 shd ef gr gs col7 s gr

% Polyline
7.500 slw
n 4800 8025 m 17800 8025 l 17800 11475 l 4800 11475 l cp gs col7 1.00 shd ef gr gs col7 s gr 
% Polyline
15.000 slw
n 11927 7052 m 12077 7052 l gs col0 s gr 
% Polyline
n 11927 7127 m 12077 7127 l gs col0 s gr 
% Polyline
n 12002 6977 m 12002 7202 l gs col0 s gr 
/Times-Roman-iso ff 360.00 scf sf
11101 7201 m
gs 1 -1 sc (<qq>   0) col0 sh gr
/Times-Roman-iso ff 360.00 scf sf
7202 6602 m
gs 1 -1 sc (<qq>   0) col0 sh gr
% Polyline
n 7426 6376 m 7576 6376 l gs col0 s gr 
% Polyline
n 8028 6453 m 8178 6453 l gs col0 s gr 
% Polyline
30.000 slw
gs  clippath
11935 7936 m 12295 8026 l 11935 8116 l 12421 8116 l 12421 7936 l cp
clip
n 5626 8026 m 12376 8026 l gs col-1 s gr gr

% arrowhead
n 11935 7936 m 12295 8026 l 11935 8116 l  col-1 s
% Polyline
15.000 slw
n 5625 5175 m 5775 5175 l gs col0 s gr 
% Polyline
n 6900 7950 m 6900 8100 l gs col0 s gr 
% Polyline
n 8103 6378 m 8103 6603 l gs col0 s gr 
% Polyline
45.000 slw
n 76 4725 m 4876 4725 l 4876 11175 l 76 11175 l cp gs col7 1.00 shd ef gr gs col7 s gr 
% Polyline
30.000 slw
gs  clippath
5611 4192 m 5701 3832 l 5791 4192 l 5791 3706 l 5611 3706 l cp
clip
n 5701 8101 m 5701 3751 l gs col-1 s gr gr

% arrowhead
n 5611 4192 m 5701 3832 l 5791 4192 l  col-1 s
% Polyline
15.000 slw
gs  clippath
6039 6527 m 6057 6773 l 5925 6565 l 6028 6872 l 6141 6834 l cp
clip
n 6000 4200 m 6000 4201 l 6000 4204 l 6000 4210 l 6000 4218 l 6000 4230 l
 6000 4247 l 6000 4268 l 6000 4294 l 5999 4326 l 5999 4362 l
 5999 4404 l 5999 4451 l 5999 4503 l 5998 4559 l 5998 4620 l
 5998 4685 l 5997 4753 l 5997 4824 l 5997 4898 l 5997 4973 l
 5996 5049 l 5996 5126 l 5996 5202 l 5996 5279 l 5995 5354 l
 5995 5428 l 5995 5501 l 5995 5571 l 5995 5639 l 5995 5705 l
 5995 5767 l 5995 5827 l 5995 5884 l 5995 5939 l 5996 5990 l
 5996 6038 l 5996 6083 l 5997 6125 l 5997 6165 l 5998 6202 l
 5998 6237 l 5999 6269 l 6000 6300 l 6002 6357 l 6004 6407 l
 6007 6453 l 6010 6494 l 6014 6532 l 6018 6567 l 6022 6600 l
 6027 6631 l 6033 6659 l 6038 6686 l 6044 6711 l 6049 6734 l
 6055 6755 l 6059 6773 l 6064 6788 l 6067 6801 l 6070 6810 l
 6075 6825 l gs col4 s gr gr

% arrowhead
n 6039 6527 m 6057 6773 l 5925 6565 l  col4 s
% Polyline
n 8028 6528 m 8178 6528 l gs col0 s gr 
% Polyline
gs  clippath
6862 6902 m 6820 7146 l 6743 6911 l 6767 7235 l 6887 7225 l cp
clip
n 6975 7275 m 6975 7273 l 6975 7268 l 6975 7260 l 6975 7246 l 6975 7227 l
 6975 7202 l 6975 7171 l 6975 7134 l 6975 7092 l 6975 7046 l
 6975 6995 l 6975 6942 l 6975 6887 l 6975 6830 l 6975 6773 l
 6975 6717 l 6975 6662 l 6975 6608 l 6975 6556 l 6975 6505 l
 6975 6457 l 6975 6411 l 6975 6366 l 6975 6323 l 6975 6282 l
 6975 6242 l 6975 6204 l 6975 6167 l 6975 6130 l 6975 6094 l
 6975 6058 l 6975 6023 l 6975 5988 l 6975 5950 l 6975 5912 l
 6975 5874 l 6975 5835 l 6975 5797 l 6975 5757 l 6974 5718 l
 6974 5677 l 6974 5637 l 6973 5597 l 6973 5556 l 6972 5515 l
 6971 5474 l 6970 5434 l 6969 5394 l 6968 5354 l 6967 5316 l
 6965 5277 l 6963 5240 l 6962 5204 l 6960 5169 l 6957 5136 l
 6955 5103 l 6952 5072 l 6950 5043 l 6947 5014 l 6944 4988 l
 6940 4962 l 6937 4939 l 6933 4916 l 6929 4895 l 6925 4875 l
 6922 4861 l 6918 4847 l 6914 4834 l 6911 4821 l 6907 4809 l
 6903 4798 l 6898 4788 l 6894 4778 l 6889 4768 l 6885 4760 l
 6880 4752 l 6875 4745 l 6870 4738 l 6865 4732 l 6859 4727 l
 6854 4723 l 6849 4720 l 6843 4717 l 6838 4715 l 6832 4714 l
 6827 4714 l 6821 4715 l 6816 4716 l 6811 4719 l 6805 4722 l
 6800 4726 l 6795 4730 l 6790 4736 l 6785 4742 l 6780 4749 l
 6776 4757 l 6772 4766 l 6767 4775 l 6763 4785 l 6759 4795 l
 6756 4806 l 6752 4818 l 6749 4831 l 6746 4844 l 6743 4858 l
 6740 4872 l 6738 4888 l 6734 4909 l 6732 4931 l 6729 4955 l
 6727 4980 l 6725 5006 l 6724 5034 l 6722 5064 l 6721 5095 l
 6720 5127 l 6720 5161 l 6719 5196 l 6719 5233 l 6719 5270 l
 6720 5309 l 6720 5348 l 6721 5388 l 6722 5429 l 6723 5470 l
 6725 5512 l 6726 5553 l 6728 5595 l 6729 5636 l 6731 5677 l
 6733 5718 l 6735 5758 l 6737 5798 l 6739 5837 l 6741 5876 l
 6744 5914 l 6746 5951 l 6748 5988 l 6750 6025 l 6752 6059 l
 6754 6093 l 6756 6128 l 6758 6162 l 6760 6197 l 6762 6232 l
 6765 6268 l 6767 6305 l 6769 6343 l 6772 6382 l 6774 6423 l
 6777 6465 l 6780 6510 l 6783 6555 l 6786 6603 l 6789 6651 l
 6792 6701 l 6796 6752 l 6799 6803 l 6802 6853 l 6805 6903 l
 6809 6951 l 6812 6996 l 6814 7037 l 6817 7075 l 6819 7108 l
 6821 7135 l 6822 7157 l 6823 7174 l 6825 7200 l gs col4 s gr gr

% arrowhead
n 6862 6902 m 6820 7146 l 6743 6911 l  col4 s
/Times-Roman-iso ff 180.00 scf sf
6825 7575 m
gs 1 -1 sc (liquid-gas) col-1 sh gr
% Polyline
gs  clippath
7703 7387 m 7469 7470 l 7636 7287 l 7367 7467 l 7433 7567 l cp
clip
n 7435 7667 m 7437 7666 l 7441 7664 l 7448 7659 l 7460 7653 l 7477 7643 l
 7498 7631 l 7525 7615 l 7557 7597 l 7593 7576 l 7634 7552 l
 7677 7527 l 7724 7500 l 7772 7473 l 7821 7444 l 7870 7416 l
 7918 7388 l 7966 7360 l 8013 7333 l 8058 7307 l 8102 7282 l
 8144 7258 l 8184 7235 l 8223 7212 l 8260 7191 l 8295 7170 l
 8330 7150 l 8363 7131 l 8396 7113 l 8427 7094 l 8458 7076 l
 8489 7058 l 8520 7041 l 8551 7023 l 8583 7004 l 8616 6985 l
 8649 6966 l 8682 6947 l 8716 6927 l 8750 6908 l 8784 6888 l
 8819 6867 l 8854 6847 l 8888 6826 l 8923 6805 l 8958 6784 l
 8993 6763 l 9028 6742 l 9062 6722 l 9095 6701 l 9128 6680 l
 9161 6660 l 9192 6640 l 9222 6620 l 9252 6601 l 9280 6582 l
 9306 6564 l 9332 6546 l 9356 6529 l 9379 6512 l 9401 6496 l
 9421 6481 l 9440 6466 l 9457 6451 l 9474 6437 l 9489 6424 l
 9500 6414 l 9510 6404 l 9519 6394 l 9528 6385 l 9537 6375 l
 9544 6366 l 9551 6357 l 9558 6348 l 9563 6340 l 9568 6331 l
 9573 6323 l 9577 6315 l 9580 6307 l 9582 6300 l 9584 6293 l
 9585 6286 l 9585 6280 l 9585 6274 l 9583 6268 l 9581 6263 l
 9579 6258 l 9576 6254 l 9572 6250 l 9567 6246 l 9561 6243 l
 9555 6241 l 9549 6239 l 9542 6237 l 9534 6236 l 9525 6235 l
 9516 6235 l 9507 6236 l 9496 6237 l 9486 6238 l 9475 6240 l
 9463 6242 l 9451 6245 l 9439 6249 l 9426 6253 l 9412 6257 l
 9398 6262 l 9384 6267 l 9364 6275 l 9343 6284 l 9322 6294 l
 9299 6304 l 9275 6316 l 9250 6329 l 9223 6342 l 9196 6357 l
 9167 6372 l 9138 6389 l 9107 6406 l 9076 6424 l 9043 6443 l
 9010 6463 l 8976 6483 l 8942 6504 l 8907 6525 l 8872 6546 l
 8837 6568 l 8802 6590 l 8767 6612 l 8732 6635 l 8697 6657 l
 8663 6679 l 8629 6701 l 8595 6722 l 8563 6744 l 8530 6765 l
 8498 6786 l 8467 6806 l 8436 6827 l 8405 6847 l 8377 6866 l
 8348 6885 l 8319 6904 l 8291 6923 l 8262 6942 l 8232 6961 l
 8202 6981 l 8171 7002 l 8140 7023 l 8107 7045 l 8073 7067 l
 8037 7091 l 8001 7115 l 7962 7141 l 7923 7167 l 7882 7194 l
 7841 7222 l 7799 7250 l 7756 7279 l 7714 7307 l 7673 7334 l
 7633 7361 l 7595 7386 l 7561 7409 l 7529 7430 l 7502 7448 l
 7479 7464 l 7461 7476 l 7446 7486 l 7425 7500 l gs col4 s gr gr

% arrowhead
n 7703 7387 m 7469 7470 l 7636 7287 l  col4 s
% Polyline
gs  clippath
11781 7740 m 12021 7800 l 11781 7860 l 12105 7860 l 12105 7740 l cp
clip
n 7875 7650 m 7876 7650 l 7879 7650 l 7884 7651 l 7891 7652 l 7902 7653 l
 7917 7655 l 7936 7658 l 7959 7660 l 7986 7664 l 8018 7668 l
 8054 7672 l 8094 7677 l 8137 7682 l 8184 7688 l 8233 7694 l
 8285 7700 l 8340 7706 l 8395 7713 l 8451 7719 l 8509 7725 l
 8566 7732 l 8623 7738 l 8679 7744 l 8735 7750 l 8790 7756 l
 8843 7761 l 8896 7766 l 8947 7771 l 8997 7776 l 9047 7780 l
 9095 7783 l 9142 7787 l 9189 7790 l 9235 7793 l 9281 7796 l
 9328 7798 l 9375 7800 l 9416 7802 l 9458 7803 l 9501 7804 l
 9545 7806 l 9589 7807 l 9634 7807 l 9681 7808 l 9728 7809 l
 9777 7809 l 9826 7810 l 9876 7810 l 9927 7810 l 9979 7810 l
 10031 7810 l 10084 7810 l 10138 7810 l 10192 7809 l 10247 7809 l
 10302 7809 l 10357 7808 l 10412 7808 l 10467 7807 l 10522 7806 l
 10577 7806 l 10632 7805 l 10686 7805 l 10739 7804 l 10792 7804 l
 10844 7803 l 10895 7803 l 10946 7802 l 10995 7802 l 11043 7802 l
 11089 7801 l 11135 7801 l 11179 7801 l 11221 7800 l 11262 7800 l
 11302 7800 l 11340 7800 l 11376 7800 l 11410 7800 l 11444 7800 l
 11475 7800 l 11529 7800 l 11578 7800 l 11623 7800 l 11665 7800 l
 11704 7800 l 11741 7800 l 11776 7800 l 11809 7800 l 11842 7800 l
 11873 7800 l 11902 7800 l 11930 7800 l 11956 7800 l 11980 7800 l
 12002 7800 l 12021 7800 l 12037 7800 l 12050 7800 l 12060 7800 l
 12075 7800 l gs col4 s gr gr

% arrowhead
n 11781 7740 m 12021 7800 l 11781 7860 l  col4 s
/Times-Roman-iso ff 240.00 scf sf
10500 8475 m
gs 1 -1 sc (5 - 10) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
6825 8475 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
7650 8775 m
gs 1 -1 sc (Baryon density ) col0 sh gr
/Symbol ff 240.00 scf sf
9450 8775 m
gs 1 -1 sc (r/r) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
9825 8925 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
5175 5250 m
gs 1 -1 sc (150) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
5175 7575 m
gs 1 -1 sc  90.0 rot (Temperature \(MeV\)) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
8775 4650 m
gs 1 -1 sc (Quark Gluon Plasma) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
7125 6075 m
gs 1 -1 sc (RHIC) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
8625 7275 m
gs 1 -1 sc (AGS/SPS) col0 sh gr
/Times-Roman-iso ff 210.00 scf sf
6150 4275 m
gs 1 -1 sc (Big Bang) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
5925 7425 m
gs 1 -1 sc (nuclear) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
5925 7695 m
gs 1 -1 sc (matter) col0 sh gr
/Times-Roman-iso ff 210.00 scf sf
9525 7650 m
gs 1 -1 sc (Neutron Stars) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
7650 8325 m
gs 1 -1 sc (pion, kaon condensation, .. ?) col0 sh gr
$F2psEnd
rs
end
showpage
%%EndDocument
 @endspecial 262 2598 a @beginspecial 229 @llx 287 @lly
383 @urx 505 @ury 1757 @rwi @setspecial
%%BeginDocument: qcd.ps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
220.0 516.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n -1000 7919 m -1000 -1000 l 5926 -1000 l 5926 7919 l cp clip
 0.03300 0.03300 sc
% Polyline
7.500 slw
n 750 3975 m 750 5925 l 4875 4725 l 4875 750 l 3975 750 l cp gs col14 1.00 shd ef gr gs col7 s gr 
% Polyline
n 750 3075 m 750 3975 l 3975 759 l 1575 759 l cp gs col6 1.00 shd ef gr gs col7 s gr 
% Polyline
n 759 3073 m 1563 777 l 759 777 l cp gs col26 1.00 shd ef gr gs col7 s gr 
/Times-Roman ff 135.00 scf sf
3923 5865 m
gs 1 -1 sc (lattice, conf) col-1 sh gr
% Ellipse
n 989 6058 57 57 0 360 DrawEllipse gs 0.00 setgray ef gr gs col-1 s gr

% Ellipse
n 2826 5599 57 57 0 360 DrawEllipse gs 0.00 setgray ef gr gs col-1 s gr

% Polyline
n 759 5599 m 874 5599 l gs col-1 s gr 
% Polyline
n 759 4680 m 874 4680 l gs col-1 s gr 
% Polyline
n 759 3762 m 874 3762 l gs col-1 s gr 
% Polyline
n 759 2843 m 874 2843 l gs col-1 s gr 
% Polyline
n 759 1925 m 874 1925 l gs col-1 s gr 
% Polyline
n 759 1007 m 874 1007 l gs col-1 s gr 
% Polyline
n 989 6517 m 989 6402 l gs col-1 s gr 
% Polyline
n 2826 6517 m 2826 6402 l gs col-1 s gr 
% Polyline
n 4720 6517 m 4720 6402 l gs col-1 s gr 
% Polyline
n 759 6058 m 817 6058 l gs col-1 s gr 
% Polyline
n 759 5139 m 817 5139 l gs col-1 s gr 
% Polyline
n 759 4221 m 817 4221 l gs col-1 s gr 
% Polyline
n 759 3303 m 817 3303 l gs col-1 s gr 
% Polyline
n 759 2384 m 817 2384 l gs col-1 s gr 
% Polyline
n 759 1466 m 817 1466 l gs col-1 s gr 
% Polyline
n 2769 4278 m 2883 4278 l 2883 4164 l 2769 4164 l cp gs 0.00 setgray ef gr gs col-1 s gr 
% Polyline
n 3636 5865 m 3751 5865 l 3751 5751 l 3636 5751 l cp gs 0.00 setgray ef gr gs col-1 s gr 
% Polyline
30.000 slw
 [60] 0 sd
n 759 3991 m 1276 2556 l 1939 777 l gs col-1 s gr  [] 0 sd
% Polyline
n 759 5139 m 2596 3991 l 4893 2614 l gs col-1 s gr 
7.500 slw
% Ellipse
n 3694 5578 57 57 0 360 DrawEllipse gs 0.00 setgray ef gr gs col-1 s gr

% Polyline
30.000 slw
n 759 3050 m 1276 1615 l 1570 777 l gs col-1 s gr 
/Times-Roman ff 225.00 scf sf
1350 5325 m
gs 1 -1 sc  20.0 rot ('weak' chiral symmetry breaking) col-1 sh gr
% Polyline
15.000 slw
n 759 777 m 4893 777 l 4893 6517 l 759 6517 l cp gs col-1 s gr 
% Polyline
30.000 slw
 [45] 0 sd
n 759 5943 m 4893 4738 l gs col-1 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 750 3975 m 3975 777 l gs col-1 s gr  [] 0 sd
% Polyline
7.500 slw
n 3464 5370 m 4726 5370 l 4726 6001 l 3464 6001 l cp gs col-1 s gr 
/Times-Roman ff 135.00 scf sf
3923 5636 m
gs 1 -1 sc (IILM, chisb) col-1 sh gr
% Polyline
n 750 5925 m 750 5924 l 753 5921 l 760 5912 l 771 5898 l 785 5881 l
 802 5861 l 820 5842 l 837 5825 l 853 5811 l 868 5800 l
 883 5792 l 897 5788 l 911 5786 l 925 5788 l 938 5791 l
 952 5795 l 967 5801 l 983 5809 l 999 5817 l 1017 5826 l
 1035 5836 l 1053 5845 l 1072 5854 l 1092 5862 l 1110 5868 l
 1129 5874 l 1147 5877 l 1165 5879 l 1183 5878 l 1200 5875 l
 1215 5870 l 1231 5863 l 1247 5855 l 1263 5844 l 1280 5833 l
 1297 5819 l 1314 5805 l 1332 5790 l 1350 5775 l 1368 5760 l
 1386 5745 l 1403 5731 l 1420 5717 l 1437 5706 l 1453 5695 l
 1469 5687 l 1485 5680 l 1500 5675 l 1517 5672 l 1535 5671 l
 1553 5673 l 1571 5676 l 1590 5680 l 1610 5686 l 1630 5693 l
 1650 5700 l 1670 5707 l 1690 5714 l 1710 5720 l 1729 5724 l
 1747 5727 l 1765 5729 l 1783 5728 l 1800 5725 l 1815 5720 l
 1831 5713 l 1847 5705 l 1863 5694 l 1880 5682 l 1897 5669 l
 1914 5654 l 1932 5639 l 1950 5623 l 1968 5607 l 1986 5592 l
 2003 5577 l 2020 5562 l 2037 5549 l 2053 5538 l 2069 5528 l
 2085 5519 l 2100 5513 l 2117 5507 l 2135 5504 l 2153 5502 l
 2171 5502 l 2190 5504 l 2210 5506 l 2230 5509 l 2250 5513 l
 2270 5516 l 2290 5519 l 2310 5521 l 2329 5523 l 2347 5523 l
 2365 5521 l 2383 5518 l 2400 5513 l 2415 5506 l 2431 5497 l
 2447 5487 l 2463 5476 l 2480 5463 l 2497 5448 l 2514 5433 l
 2532 5418 l 2550 5402 l 2568 5386 l 2586 5371 l 2603 5356 l
 2620 5343 l 2637 5331 l 2653 5320 l 2669 5312 l 2685 5305 l
 2700 5300 l 2717 5297 l 2735 5296 l 2753 5298 l 2771 5301 l
 2790 5305 l 2810 5311 l 2830 5318 l 2850 5325 l 2870 5332 l
 2890 5339 l 2910 5345 l 2929 5349 l 2947 5352 l 2965 5354 l
 2983 5353 l 3000 5350 l 3015 5345 l 3031 5338 l 3047 5330 l
 3063 5319 l 3080 5308 l 3097 5294 l 3114 5280 l 3132 5265 l
 3150 5250 l 3168 5235 l 3186 5220 l 3203 5206 l 3220 5192 l
 3237 5181 l 3253 5170 l 3269 5162 l 3285 5155 l 3300 5150 l
 3317 5147 l 3335 5146 l 3353 5148 l 3371 5151 l 3390 5155 l
 3410 5161 l 3430 5168 l 3450 5175 l 3470 5182 l 3490 5189 l
 3510 5195 l 3529 5199 l 3547 5202 l 3565 5204 l 3583 5203 l
 3600 5200 l 3615 5195 l 3631 5188 l 3647 5180 l 3663 5169 l
 3680 5157 l 3697 5144 l 3714 5129 l 3732 5114 l 3750 5098 l
 3768 5082 l 3786 5067 l 3803 5052 l 3820 5037 l 3837 5024 l
 3853 5013 l 3869 5003 l 3885 4994 l 3900 4988 l 3917 4982 l
 3935 4979 l 3953 4977 l 3971 4977 l 3990 4979 l 4010 4981 l
 4030 4984 l 4050 4988 l 4070 4991 l 4090 4994 l 4110 4996 l
 4129 4998 l 4147 4998 l 4165 4996 l 4183 4993 l 4200 4988 l
 4215 4981 l 4231 4972 l 4247 4962 l 4263 4951 l 4280 4938 l
 4297 4923 l 4314 4908 l 4332 4893 l 4350 4877 l 4368 4861 l
 4386 4846 l 4403 4831 l 4420 4818 l 4437 4806 l 4453 4795 l
 4469 4787 l 4485 4780 l 4500 4775 l 4517 4772 l 4535 4771 l
 4552 4773 l 4571 4776 l 4589 4782 l 4608 4788 l 4626 4796 l
 4645 4805 l 4663 4814 l 4680 4824 l 4696 4833 l 4712 4841 l
 4726 4849 l 4739 4855 l 4751 4859 l 4763 4863 l 4774 4864 l
 4785 4862 l 4795 4858 l 4805 4850 l 4815 4839 l 4826 4825 l
 4836 4808 l 4846 4789 l 4856 4769 l 4864 4752 l 4870 4738 l
 4873 4729 l 4875 4726 l 4875 4725 l gs col-1 s gr 
/Times-Roman ff 135.00 scf sf
989 6747 m
gs 1 -1 sc (2) col-1 sh gr
/Times-Roman ff 135.00 scf sf
2769 6747 m
gs 1 -1 sc (3) col-1 sh gr
/Times-Roman ff 135.00 scf sf
4663 6747 m
gs 1 -1 sc (4) col-1 sh gr
/Times-Roman ff 135.00 scf sf
530 5656 m
gs 1 -1 sc (4) col-1 sh gr
/Times-Roman ff 135.00 scf sf
530 4738 m
gs 1 -1 sc (6) col-1 sh gr
/Times-Roman ff 135.00 scf sf
530 3819 m
gs 1 -1 sc (8) col-1 sh gr
/Times-Roman ff 135.00 scf sf
472 2901 m
gs 1 -1 sc (10) col-1 sh gr
/Times-Roman ff 135.00 scf sf
472 1982 m
gs 1 -1 sc (12) col-1 sh gr
/Times-Roman ff 135.00 scf sf
472 1064 m
gs 1 -1 sc (14) col-1 sh gr
/Times-Roman ff 270.00 scf sf
3687 6861 m
gs 1 -1 sc (N) col-1 sh gr
/Times-Roman ff 270.00 scf sf
300 1523 m
gs 1 -1 sc (N) col-1 sh gr
/Times-Roman ff 195.00 scf sf
530 1581 m
gs 1 -1 sc (f) col-1 sh gr
/Times-Roman ff 195.00 scf sf
3917 6919 m
gs 1 -1 sc (c) col-1 sh gr
/Times-Roman ff 225.00 scf sf
2367 547 m
gs 1 -1 sc (QCD) col-1 sh gr
/Times-Roman ff 180.00 scf sf
1275 6225 m
gs 1 -1 sc (chiral symmetry breaking, confinement) col-1 sh gr
/Times-Roman ff 180.00 scf sf
1391 1466 m
gs 1 -1 sc (b=0) col-1 sh gr
/Times-Roman ff 180.00 scf sf
1793 1466 m
gs 1 -1 sc (b=2 ) col-1 sh gr
/Times-Roman ff 225.00 scf sf
2925 3300 m
gs 1 -1 sc (b'=0) col-1 sh gr
/Times-Roman ff 225.00 scf sf
1725 1875 m
gs 1 -1 sc (conformal) col-1 sh gr
$F2psEnd
rs
showpage
%%EndDocument
 @endspecial 1011 2605 a @beginspecial 232 @llx 287 @lly
379 @urx 505 @ury 1700 @rwi @setspecial
%%BeginDocument: sqcd.ps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
214.5 513.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n -1000 7844 m -1000 -1000 l 5991 -1000 l 5991 7844 l cp clip
 0.03300 0.03300 sc
% Polyline
7.500 slw
n 834 6021 m 4969 5524 l 4969 4031 l 834 5811 l cp gs col14 1.00 shd ef gr gs col7 s gr 
% Polyline
n 834 6231 m 4969 5753 l 4969 5524 l 834 6001 l cp gs col17 1.00 shd ef gr gs col7 s gr 
% Polyline
n 834 5811 m 4969 4031 l 4969 1391 l 834 4720 l cp gs col6 1.00 shd ef gr gs col7 s gr 
% Polyline
n 1064 6442 m 4969 6442 l 4969 5983 l cp gs /PC [[1.00 0.88 0.88] [1.00 1.00 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 70.93 398.87] PATmp PATsp ef gr PATusp gs col7 s gr 
% Polyline
n 834 4720 m 4969 1391 l 4969 702 l 834 702 l cp gs col26 1.00 shd ef gr gs col7 s gr 
% Polyline
n 1065 6442 m 1065 6327 l gs col-1 s gr 
% Polyline
n 2902 6442 m 2902 6327 l gs col-1 s gr 
% Polyline
n 4797 6442 m 4797 6327 l gs col-1 s gr 
% Polyline
n 835 5983 m 893 5983 l gs col-1 s gr 
% Polyline
n 835 5064 m 893 5064 l gs col-1 s gr 
% Polyline
n 835 4146 m 893 4146 l gs col-1 s gr 
% Polyline
n 835 3228 m 893 3228 l gs col-1 s gr 
% Polyline
n 835 2309 m 893 2309 l gs col-1 s gr 
% Polyline
n 835 1391 m 893 1391 l gs col-1 s gr 
% Polyline
n 835 1850 m 950 1850 l gs col-1 s gr 
% Polyline
n 835 2768 m 950 2768 l gs col-1 s gr 
% Polyline
n 835 3687 m 950 3687 l gs col-1 s gr 
% Polyline
n 835 4605 m 950 4605 l gs col-1 s gr 
% Polyline
30.000 slw
n 834 4720 m 4567 1735 l 4957 1409 l gs col-1 s gr 
% Polyline
n 837 5816 m 4512 4209 l 4952 4017 l gs col-1 s gr 
% Polyline
n 835 6008 m 2672 5778 l 4957 5516 l gs col-1 s gr 
% Polyline
7.500 slw
n 835 5524 m 950 5524 l gs col-1 s gr 
% Polyline
30.000 slw
n 834 6250 m 2671 6021 l 4956 5758 l gs col-1 s gr 
/Times-Roman ff 225.00 scf sf
1408 1333 m
gs 1 -1 sc (IR free) col-1 sh gr
% Polyline
15.000 slw
n 835 702 m 4969 702 l 4969 6442 l 835 6442 l cp gs col-1 s gr 
% Polyline
7.500 slw
n 835 932 m 950 932 l gs col-1 s gr 
% Polyline
30.000 slw
n 1046 6442 m 2671 6250 l 4956 5987 l gs col-1 s gr 
/Times-Roman ff 135.00 scf sf
1065 6672 m
gs 1 -1 sc (2) col-1 sh gr
/Times-Roman ff 135.00 scf sf
2845 6672 m
gs 1 -1 sc (3) col-1 sh gr
/Times-Roman ff 135.00 scf sf
4739 6672 m
gs 1 -1 sc (4) col-1 sh gr
/Times-Roman ff 135.00 scf sf
606 5581 m
gs 1 -1 sc (4) col-1 sh gr
/Times-Roman ff 135.00 scf sf
606 4663 m
gs 1 -1 sc (6) col-1 sh gr
/Times-Roman ff 135.00 scf sf
606 3744 m
gs 1 -1 sc (8) col-1 sh gr
/Times-Roman ff 135.00 scf sf
548 2826 m
gs 1 -1 sc (10) col-1 sh gr
/Times-Roman ff 135.00 scf sf
548 1907 m
gs 1 -1 sc (12) col-1 sh gr
/Times-Roman ff 135.00 scf sf
548 989 m
gs 1 -1 sc (14) col-1 sh gr
/Times-Roman ff 270.00 scf sf
3763 6786 m
gs 1 -1 sc (N) col-1 sh gr
/Times-Roman ff 195.00 scf sf
3993 6844 m
gs 1 -1 sc (c) col-1 sh gr
/Times-Roman ff 225.00 scf sf
2442 472 m
gs 1 -1 sc (SUSY QCD) col-1 sh gr
/Times-Roman ff 225.00 scf sf
2786 3974 m
gs 1 -1 sc (conformal) col-1 sh gr
/Times-Roman ff 225.00 scf sf
3016 5466 m
gs 1 -1 sc (Coulomb) col-1 sh gr
/Times-Roman ff 180.00 scf sf
1408 6098 m
gs 1 -1 sc  6.0 rot (no chisb, confinement) col-1 sh gr
/Times-Roman ff 180.00 scf sf
1403 6316 m
gs 1 -1 sc  6.0 rot (chiral symmetry breaking, confinement) col-1 sh gr
/Times-Roman ff 180.00 scf sf
3131 6385 m
gs 1 -1 sc (no ground state) col-1 sh gr
$F2psEnd
rs
end
showpage
%%EndDocument
 @endspecial 979 3436 a Fa(1)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
